<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="UniversityDataSet" targetNamespace="http://tempuri.org/UniversityDataSet.xsd" xmlns:mstns="http://tempuri.org/UniversityDataSet.xsd" xmlns="http://tempuri.org/UniversityDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="UniversityConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="UniversityConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.WpfApp14.Properties.Settings.GlobalReference.Default.UniversityConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CoursesTableAdapter" GeneratorDataComponentClassName="CoursesTableAdapter" Name="Courses" UserDataComponentName="CoursesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="UniversityConnectionString (Settings)" DbObjectName="University.dbo.Courses" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Courses] WHERE (([ID_Course] = @Original_ID_Course) AND ([Title] = @Original_Title))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Course" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Course" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Title" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Title" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Courses] ([Title], [DescriptionCourse]) VALUES (@Title, @DescriptionCourse);
SELECT ID_Course, Title, DescriptionCourse FROM Courses WHERE (ID_Course = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Title" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Title" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@DescriptionCourse" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="DescriptionCourse" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID_Course, Title, DescriptionCourse FROM dbo.Courses</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Courses] SET [Title] = @Title, [DescriptionCourse] = @DescriptionCourse WHERE (([ID_Course] = @Original_ID_Course) AND ([Title] = @Original_Title));
SELECT ID_Course, Title, DescriptionCourse FROM Courses WHERE (ID_Course = @ID_Course)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Title" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Title" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@DescriptionCourse" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="DescriptionCourse" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Course" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Course" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Title" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Title" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID_Course" ColumnName="ID_Course" DataSourceName="University.dbo.Courses" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID_Course" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Course" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_Course" DataSetColumn="ID_Course" />
              <Mapping SourceColumn="Title" DataSetColumn="Title" />
              <Mapping SourceColumn="DescriptionCourse" DataSetColumn="DescriptionCourse" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="UniversityConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[Courses] WHERE (([ID_Course] = @Original_ID_Course) AND ([Title] = @Original_Title))
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_ID_Course" ColumnName="ID_Course" DataSourceName="University.dbo.Courses" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Course" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Course" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_Title" ColumnName="Title" DataSourceName="University.dbo.Courses" DataTypeServer="varchar(100)" DbType="AnsiString" Direction="Input" ParameterName="@Original_Title" Precision="0" ProviderType="VarChar" Scale="0" Size="100" SourceColumn="Title" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentsTableAdapter" GeneratorDataComponentClassName="StudentsTableAdapter" Name="Students" UserDataComponentName="StudentsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="UniversityConnectionString (Settings)" DbObjectName="University.dbo.Students" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Students] WHERE (([ID_Student] = @Original_ID_Student) AND ([StudentSurname] = @Original_StudentSurname) AND ([StudentName] = @Original_StudentName) AND ((@IsNull_StudentMiddleName = 1 AND [StudentMiddleName] IS NULL) OR ([StudentMiddleName] = @Original_StudentMiddleName)) AND ([Age] = @Original_Age) AND ([Email] = @Original_Email))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Student" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Student" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_StudentSurname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StudentSurname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_StudentName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StudentName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_StudentMiddleName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentMiddleName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_StudentMiddleName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StudentMiddleName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Age" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Age" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Students] ([StudentSurname], [StudentName], [StudentMiddleName], [Age], [Email]) VALUES (@StudentSurname, @StudentName, @StudentMiddleName, @Age, @Email);
SELECT ID_Student, StudentSurname, StudentName, StudentMiddleName, Age, Email FROM Students WHERE (ID_Student = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@StudentSurname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StudentSurname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@StudentName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StudentName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@StudentMiddleName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StudentMiddleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Age" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Age" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID_Student, StudentSurname, StudentName, StudentMiddleName, Age, Email FROM dbo.Students</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Students] SET [StudentSurname] = @StudentSurname, [StudentName] = @StudentName, [StudentMiddleName] = @StudentMiddleName, [Age] = @Age, [Email] = @Email WHERE (([ID_Student] = @Original_ID_Student) AND ([StudentSurname] = @Original_StudentSurname) AND ([StudentName] = @Original_StudentName) AND ((@IsNull_StudentMiddleName = 1 AND [StudentMiddleName] IS NULL) OR ([StudentMiddleName] = @Original_StudentMiddleName)) AND ([Age] = @Original_Age) AND ([Email] = @Original_Email));
SELECT ID_Student, StudentSurname, StudentName, StudentMiddleName, Age, Email FROM Students WHERE (ID_Student = @ID_Student)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@StudentSurname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StudentSurname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@StudentName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StudentName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@StudentMiddleName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StudentMiddleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Age" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Age" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Student" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Student" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_StudentSurname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StudentSurname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_StudentName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StudentName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_StudentMiddleName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentMiddleName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_StudentMiddleName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="StudentMiddleName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Age" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Age" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID_Student" ColumnName="ID_Student" DataSourceName="University.dbo.Students" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID_Student" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Student" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_Student" DataSetColumn="ID_Student" />
              <Mapping SourceColumn="StudentSurname" DataSetColumn="StudentSurname" />
              <Mapping SourceColumn="StudentName" DataSetColumn="StudentName" />
              <Mapping SourceColumn="StudentMiddleName" DataSetColumn="StudentMiddleName" />
              <Mapping SourceColumn="Age" DataSetColumn="Age" />
              <Mapping SourceColumn="Email" DataSetColumn="Email" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentsCoursesTableAdapter" GeneratorDataComponentClassName="StudentsCoursesTableAdapter" Name="StudentsCourses" UserDataComponentName="StudentsCoursesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="UniversityConnectionString (Settings)" DbObjectName="University.dbo.StudentsCourses" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[StudentsCourses] WHERE (([ID_StudentsCourses] = @Original_ID_StudentsCourses) AND ([Student_ID] = @Original_Student_ID) AND ([Course_ID] = @Original_Course_ID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_StudentsCourses" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_StudentsCourses" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Student_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Student_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Course_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Course_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[StudentsCourses] ([Student_ID], [Course_ID]) VALUES (@Student_ID, @Course_ID);
SELECT ID_StudentsCourses, Student_ID, Course_ID FROM StudentsCourses WHERE (ID_StudentsCourses = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Student_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Student_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Course_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Course_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID_StudentsCourses, Student_ID, Course_ID FROM dbo.StudentsCourses</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[StudentsCourses] SET [Student_ID] = @Student_ID, [Course_ID] = @Course_ID WHERE (([ID_StudentsCourses] = @Original_ID_StudentsCourses) AND ([Student_ID] = @Original_Student_ID) AND ([Course_ID] = @Original_Course_ID));
SELECT ID_StudentsCourses, Student_ID, Course_ID FROM StudentsCourses WHERE (ID_StudentsCourses = @ID_StudentsCourses)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Student_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Student_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Course_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Course_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_StudentsCourses" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_StudentsCourses" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Student_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Student_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Course_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Course_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID_StudentsCourses" ColumnName="ID_StudentsCourses" DataSourceName="University.dbo.StudentsCourses" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID_StudentsCourses" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_StudentsCourses" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_StudentsCourses" DataSetColumn="ID_StudentsCourses" />
              <Mapping SourceColumn="Student_ID" DataSetColumn="Student_ID" />
              <Mapping SourceColumn="Course_ID" DataSetColumn="Course_ID" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="UniversityConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteQuery" Modifier="Public" Name="DeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="DeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM StudentsCourses
WHERE  (Course_ID IN
                      (SELECT ID_Course
                       FROM      Courses
                       WHERE   (ID_Course = @Original_ID_Course) AND (Title = @Original_Title)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_ID_Course" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Course" Precision="0" Scale="0" Size="4" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_Title" ColumnName="" DataSourceName="" DataTypeServer="varchar(100)" DbType="AnsiString" Direction="Input" ParameterName="@Original_Title" Precision="0" Scale="0" Size="100" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentsCoursesViewTableAdapter" GeneratorDataComponentClassName="StudentsCoursesViewTableAdapter" Name="StudentsCoursesView" UserDataComponentName="StudentsCoursesViewTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="UniversityConnectionString (Settings)" DbObjectName="University.dbo.StudentsCoursesView" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT StudentFullName, CourseTitle FROM dbo.StudentsCoursesView</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="StudentFullName" DataSetColumn="StudentFullName" />
              <Mapping SourceColumn="CourseTitle" DataSetColumn="CourseTitle" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentsCoursesView2TableAdapter" GeneratorDataComponentClassName="StudentsCoursesView2TableAdapter" Name="StudentsCoursesView2" UserDataComponentName="StudentsCoursesView2TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="UniversityConnectionString (Settings)" DbObjectName="University.dbo.StudentsCoursesView2" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, StudentFullName, CourseTitle FROM dbo.StudentsCoursesView2</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="StudentFullName" DataSetColumn="StudentFullName" />
              <Mapping SourceColumn="CourseTitle" DataSetColumn="CourseTitle" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="UniversityDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="UniversityDataSet" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="UniversityDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Courses" msprop:Generator_RowClassName="CoursesRow" msprop:Generator_RowEvHandlerName="CoursesRowChangeEventHandler" msprop:Generator_RowDeletedName="CoursesRowDeleted" msprop:Generator_RowDeletingName="CoursesRowDeleting" msprop:Generator_RowEvArgName="CoursesRowChangeEvent" msprop:Generator_TablePropName="Courses" msprop:Generator_RowChangedName="CoursesRowChanged" msprop:Generator_UserTableName="Courses" msprop:Generator_RowChangingName="CoursesRowChanging" msprop:Generator_TableClassName="CoursesDataTable" msprop:Generator_TableVarName="tableCourses">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_Course" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="ID_Course" msprop:Generator_ColumnPropNameInTable="ID_CourseColumn" msprop:Generator_ColumnPropNameInRow="ID_Course" msprop:Generator_ColumnVarNameInTable="columnID_Course" type="xs:int" />
              <xs:element name="Title" msprop:Generator_UserColumnName="Title" msprop:Generator_ColumnPropNameInTable="TitleColumn" msprop:Generator_ColumnPropNameInRow="Title" msprop:Generator_ColumnVarNameInTable="columnTitle">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="DescriptionCourse" msprop:Generator_UserColumnName="DescriptionCourse" msprop:Generator_ColumnPropNameInTable="DescriptionCourseColumn" msprop:Generator_ColumnPropNameInRow="DescriptionCourse" msprop:Generator_ColumnVarNameInTable="columnDescriptionCourse" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Students" msprop:Generator_RowClassName="StudentsRow" msprop:Generator_RowEvHandlerName="StudentsRowChangeEventHandler" msprop:Generator_RowDeletedName="StudentsRowDeleted" msprop:Generator_RowDeletingName="StudentsRowDeleting" msprop:Generator_RowEvArgName="StudentsRowChangeEvent" msprop:Generator_TablePropName="Students" msprop:Generator_RowChangedName="StudentsRowChanged" msprop:Generator_UserTableName="Students" msprop:Generator_RowChangingName="StudentsRowChanging" msprop:Generator_TableClassName="StudentsDataTable" msprop:Generator_TableVarName="tableStudents">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_Student" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="ID_Student" msprop:Generator_ColumnPropNameInTable="ID_StudentColumn" msprop:Generator_ColumnPropNameInRow="ID_Student" msprop:Generator_ColumnVarNameInTable="columnID_Student" type="xs:int" />
              <xs:element name="StudentSurname" msprop:Generator_UserColumnName="StudentSurname" msprop:Generator_ColumnPropNameInTable="StudentSurnameColumn" msprop:Generator_ColumnPropNameInRow="StudentSurname" msprop:Generator_ColumnVarNameInTable="columnStudentSurname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="StudentName" msprop:Generator_UserColumnName="StudentName" msprop:Generator_ColumnPropNameInTable="StudentNameColumn" msprop:Generator_ColumnPropNameInRow="StudentName" msprop:Generator_ColumnVarNameInTable="columnStudentName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="StudentMiddleName" msprop:Generator_UserColumnName="StudentMiddleName" msprop:Generator_ColumnPropNameInTable="StudentMiddleNameColumn" msprop:Generator_ColumnPropNameInRow="StudentMiddleName" msprop:Generator_ColumnVarNameInTable="columnStudentMiddleName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Age" msprop:Generator_UserColumnName="Age" msprop:Generator_ColumnPropNameInTable="AgeColumn" msprop:Generator_ColumnPropNameInRow="Age" msprop:Generator_ColumnVarNameInTable="columnAge" type="xs:int" />
              <xs:element name="Email" msprop:Generator_UserColumnName="Email" msprop:Generator_ColumnPropNameInTable="EmailColumn" msprop:Generator_ColumnPropNameInRow="Email" msprop:Generator_ColumnVarNameInTable="columnEmail">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="StudentsCourses" msprop:Generator_RowClassName="StudentsCoursesRow" msprop:Generator_RowEvHandlerName="StudentsCoursesRowChangeEventHandler" msprop:Generator_RowDeletedName="StudentsCoursesRowDeleted" msprop:Generator_RowDeletingName="StudentsCoursesRowDeleting" msprop:Generator_RowEvArgName="StudentsCoursesRowChangeEvent" msprop:Generator_TablePropName="StudentsCourses" msprop:Generator_RowChangedName="StudentsCoursesRowChanged" msprop:Generator_UserTableName="StudentsCourses" msprop:Generator_RowChangingName="StudentsCoursesRowChanging" msprop:Generator_TableClassName="StudentsCoursesDataTable" msprop:Generator_TableVarName="tableStudentsCourses">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_StudentsCourses" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="ID_StudentsCourses" msprop:Generator_ColumnPropNameInTable="ID_StudentsCoursesColumn" msprop:Generator_ColumnPropNameInRow="ID_StudentsCourses" msprop:Generator_ColumnVarNameInTable="columnID_StudentsCourses" type="xs:int" />
              <xs:element name="Student_ID" msprop:Generator_UserColumnName="Student_ID" msprop:Generator_ColumnPropNameInTable="Student_IDColumn" msprop:Generator_ColumnPropNameInRow="Student_ID" msprop:Generator_ColumnVarNameInTable="columnStudent_ID" type="xs:int" />
              <xs:element name="Course_ID" msprop:Generator_UserColumnName="Course_ID" msprop:Generator_ColumnPropNameInTable="Course_IDColumn" msprop:Generator_ColumnPropNameInRow="Course_ID" msprop:Generator_ColumnVarNameInTable="columnCourse_ID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="StudentsCoursesView" msprop:Generator_RowClassName="StudentsCoursesViewRow" msprop:Generator_RowEvHandlerName="StudentsCoursesViewRowChangeEventHandler" msprop:Generator_RowDeletedName="StudentsCoursesViewRowDeleted" msprop:Generator_RowDeletingName="StudentsCoursesViewRowDeleting" msprop:Generator_RowEvArgName="StudentsCoursesViewRowChangeEvent" msprop:Generator_TablePropName="StudentsCoursesView" msprop:Generator_RowChangedName="StudentsCoursesViewRowChanged" msprop:Generator_UserTableName="StudentsCoursesView" msprop:Generator_RowChangingName="StudentsCoursesViewRowChanging" msprop:Generator_TableClassName="StudentsCoursesViewDataTable" msprop:Generator_TableVarName="tableStudentsCoursesView">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="StudentFullName" msdata:ReadOnly="true" msprop:Generator_UserColumnName="StudentFullName" msprop:Generator_ColumnPropNameInTable="StudentFullNameColumn" msprop:Generator_ColumnPropNameInRow="StudentFullName" msprop:Generator_ColumnVarNameInTable="columnStudentFullName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="55" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CourseTitle" msprop:Generator_UserColumnName="CourseTitle" msprop:Generator_ColumnPropNameInTable="CourseTitleColumn" msprop:Generator_ColumnPropNameInRow="CourseTitle" msprop:Generator_ColumnVarNameInTable="columnCourseTitle">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="StudentsCoursesView2" msprop:Generator_RowClassName="StudentsCoursesView2Row" msprop:Generator_RowEvHandlerName="StudentsCoursesView2RowChangeEventHandler" msprop:Generator_RowDeletedName="StudentsCoursesView2RowDeleted" msprop:Generator_RowDeletingName="StudentsCoursesView2RowDeleting" msprop:Generator_RowEvArgName="StudentsCoursesView2RowChangeEvent" msprop:Generator_TablePropName="StudentsCoursesView2" msprop:Generator_RowChangedName="StudentsCoursesView2RowChanged" msprop:Generator_UserTableName="StudentsCoursesView2" msprop:Generator_RowChangingName="StudentsCoursesView2RowChanging" msprop:Generator_TableClassName="StudentsCoursesView2DataTable" msprop:Generator_TableVarName="tableStudentsCoursesView2">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msprop:Generator_UserColumnName="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnVarNameInTable="columnID" type="xs:int" />
              <xs:element name="StudentFullName" msdata:ReadOnly="true" msprop:Generator_UserColumnName="StudentFullName" msprop:Generator_ColumnPropNameInTable="StudentFullNameColumn" msprop:Generator_ColumnPropNameInRow="StudentFullName" msprop:Generator_ColumnVarNameInTable="columnStudentFullName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="55" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CourseTitle" msprop:Generator_UserColumnName="CourseTitle" msprop:Generator_ColumnPropNameInTable="CourseTitleColumn" msprop:Generator_ColumnPropNameInRow="CourseTitle" msprop:Generator_ColumnVarNameInTable="columnCourseTitle">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Courses" />
      <xs:field xpath="mstns:ID_Course" />
    </xs:unique>
    <xs:unique name="Students_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Students" />
      <xs:field xpath="mstns:ID_Student" />
    </xs:unique>
    <xs:unique name="StudentsCourses_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:StudentsCourses" />
      <xs:field xpath="mstns:ID_StudentsCourses" />
    </xs:unique>
    <xs:unique name="StudentsCoursesView2_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:StudentsCoursesView2" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK__StudentsC__Cours__3C69FB99" msdata:parent="Courses" msdata:child="StudentsCourses" msdata:parentkey="ID_Course" msdata:childkey="Course_ID" msprop:Generator_UserParentTable="Courses" msprop:Generator_UserChildTable="StudentsCourses" msprop:Generator_RelationVarName="relationFK__StudentsC__Cours__3C69FB99" msprop:Generator_ChildPropName="GetStudentsCoursesRows" msprop:Generator_UserRelationName="FK__StudentsC__Cours__3C69FB99" msprop:Generator_ParentPropName="CoursesRow" />
      <msdata:Relationship name="FK__StudentsC__Stude__3B75D760" msdata:parent="Students" msdata:child="StudentsCourses" msdata:parentkey="ID_Student" msdata:childkey="Student_ID" msprop:Generator_UserParentTable="Students" msprop:Generator_UserChildTable="StudentsCourses" msprop:Generator_RelationVarName="relationFK__StudentsC__Stude__3B75D760" msprop:Generator_ChildPropName="GetStudentsCoursesRows" msprop:Generator_UserRelationName="FK__StudentsC__Stude__3B75D760" msprop:Generator_ParentPropName="StudentsRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>